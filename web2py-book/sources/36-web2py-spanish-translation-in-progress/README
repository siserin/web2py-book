## 2.00.1 Undocumented features

[ ] UPDATE file listing in chapter 3

### DAL Improvements

[x] Support for DAL(lazy_tables=True) and db.define_table(on_define=lambda table:), thanks Jonathan
[x] db(...).select(cacheable=True) make select 30% faster
[x] db(...).select(cache=(cache.ram,3600)) now caches parsed data 100x faster
[x] db(...).count(cache=(cache.ram,3600)) now supported
[x] MongoDB support in DAL (experimental), thanks Mark Breedveld
[ ] geodal and spatialite, thanks Denes and Fran (experimental)
[x] db.mytable._before_insert, _after_insert, _before_update, _after_update, _before_delete. _after_delete (list of callbacks)
[ ] db(...).update_naive(...) same as update but ignores table._before_update and table._after_update
[x] DAL BIGINT support and DAL(...,bigint_id=True)
[x] IS_IN_DB(..., distinct=True)
[x] new syntax: db.mytable.insert(myuploadfield=open(....)), thank you Iceberg
[x] db(...).select(db.mytable.myfield.count(distinct=True))
[ ] db(db.a)._update(name=db(db.b.a==db.a.id).nested_select(db.b.id))
[ ] db.mytable.myfield.filter_in, filter_out
[ ] db.mytable._enable_record_versioning(db) adds versioning to this table
[x] teradata adapter, thanks Andrew Willimott
[x] experimental Sybase Adapter
[x] added db.table.field.avg()
[ ] Support for Google App Engine projections, thanks Christian
[x] Field(... 'upload', default=path) now accepts a path to a local file as default value, if user does not upload a file. Relative path looks inside current application folder, thanks Marin
[x] executesql(...,fields=,columns=) allows parsing of results in Rows, thanks Anthony
[ ] Rows.find(lambda row: bool(), limitby=(0,1))

### Auth improvements

[ ] auth.enable_record_versioning(db)  adds full versioning to all tables
[x] @auth.requires_login(otherwise=URL(...))
[ ] auth supports salt and compatible with third party data, thanks Dave Stoll
[x] CRYPT now defaults to pbkdf2(1000,20,sha1)
[ ] Built-in wiki with menu, tags, search, media, permissions. def index: return auth.wiki()
[ ] auth.settings.everybody_group_id
[x] allow storage of uploads on any PyFileSystem (including amazon)

### Form improvements

[ ] FORM.confirm('Are you sure?',{'Back':URL(...)})
[ ] SQLFORM.smartdictform(dict)
[ ] form.add_button(value,link)
[ ] SQLFORM.grid(groupby='...')
[ ] fixed security issue with SQLFORM.grid and SQLFORM.smartgrid
[x] more export options in SQLFORM.grid and SQLFORM.smartgrid (html, xml, csv, ...)

### Admin improvements

[ ] new admin pages: manage_students, bulk_regsiter, and progress reports
[ ] increased security in admin against CSRF
[ ] experimental Git integration
[ ] experimental OpenShift deployment
[ ] multi-language pluralization engine 
[ ] ace text web editor in admin
[ ] Ukrainian translations, thanks Vladyslav Kozlovskyy
[ ] Romanian translation for welcome, thanks ionel
[ ] support for mercurial 2.6, thanks Vlad

### Scheduler Improvements (thanks to niphlod, ykessler, dhx, toomim)

[ ] web2py.py -K myapp -X starts the myapp scheduler alongside the webserver
[ ] tasks are marked EXPIRED (if stop_time passed)
[ ] functions with no result don't end up in scheduler_run
[ ] more options: web2py.py -E -b -L
[ ] scheduler can now handle 10k tasks with 20 concurrent workers and with no issues
[ ] new params:
    tasks can be found in the environment (no need to define the tasks parameter)
    max_empty_runs kills the workers automatically if no new tasks are found in queue (nice for "spikes" of processing power)
    discard_results to completely discard the results (if you don't need the output of the task)
    utc_time enables datetime calculations with UTC time
[ ] scheduler_task changes:
    task_name is no longer required (filled automatically with function_name if found empty)
    uuid makes easy to coordinate scheduler_task maintenance (filled automatically if not provided)
    stop_time has no default (previously was today+1)
    retry_failed to requeue automatically failed tasks
    sync_output refreshes automatically the output (nice to report percentages)
[ ] workers can be:
    DISABLED (put to sleep and do nothing if not sending the heartbeat every 30 seconds)
    TERMINATE (complete the current task and then die)
    KILL (kill ASAP)

### Other Improvements 

[ ] gluon/contrib/webclient.py makes it easy to create functional tests for app
[ ] DIV(..).elements(...replace=...), thanks Anthony
[x] new layout based on Twitter Bootstrap
[x] New generic views: generic.ics (Mac Mail Calendar) and generic.map (Google Maps)
[ ] request.args(0,default=0, cast=int, otherwise=URL(...)), thanks Anthony
[x] redirect(...,type='auto') will be handled properly in ajax responses
[x] routes in can redirect outside with routes_in=[('/path','303->http://..')]
[ ] better memcache support
[ ] improved spreadsheet, thanks Alan
[ ] new internationalization engine, thanks Vladyslav
[ ] pluralization engine, thanks Vladyslav
[ ] new markmin with support for nested lists, <i>, <em>, autolinks, thanks Vladyslav
[ ] new syntax: {{=BR()*5}}
[ ] gluon.cache.lazy_cache decorator allows caching functions in modules
[x] .coffee and .less support in response.files, thanks Sam Sheftel
[x] ldap certificate support
[ ] pg8000 postgresql driver support (experimental)
[ ] @cache('%(name)s%(args)s%(vars)s',5) and cache.autokey
[ ] added tox.ini, thanks Marc
[ ] web2py.py --run_system_tests, thanks Marc Abramowitz
[ ] html.py (and web2py helpers) can be used without web2py dependencies
[ ] new fpdf, thanks Mariano


## 1.99.5-1.99.7
[ ] admin in Russian (Bulat), Japanese (Omi) and Slovenian (Robert Valentak)
[ ] included web-based debugger (experimental, thanks Mariano)
[ ] def index(): return dict(a=gluon.tools.Expose(folder))
[ ] db.table.field.like(...,case_sensitive=False) (thanks Floyd)
[x] db.table.field.regexp(...) for sqlite and postgres
[ ] db(...,ignore_common_filters=True)
[x] db(db.dog_id.belongs(db.dogs.owner=='james')).select()
[ ] db(...).select().group_by_value(db.table.field) (thanks Yair)
[x] db = DAL('imap://user:password@server:port') support (thanks Alan Etkin)
[x] db = DAL('teradata://DSN=dsn;UID=user;PWD=pass; DATABASE=database') (thanks Adrew Willmott)
[x] db = DAL('mongodb://127.0.0.1:5984/db') (experimental, thanks Mark Breedveld)
[x] db = DAL('cubrid')  (experimental)
[x] db = DAL('postgres:pg8000:...') and DAL('postgres:psycopg2:...')
[x] pg8000 now ships with web2py (thanks Mariano) 
[x] reponse.delimiters = ('\\[','\\]') (thanks Denes)
[ ] auth.user_groups stores user groups
[ ] auth.is_impersonating()
[ ] populate can now deal with computed fields (thanks Tsvi Mostovicz)
[ ] new rediscache (thanks niphold)
[ ] sync languages capability (thanks Yair)
[ ] improved markmin auto-links
[ ] improved ldap support (thanks Omi)
[ ] added TimeCollector (thanks Caleb)
[ ] better cpdb.py (thanks pasxidis)
[x] conditional menu items (reponse.menu=[(title,bool,link,[],condition)]
[ ] scripts/services/service.py (thanks Ross)
[ ] gluon/contrib/login_methods/browserid_account.py (thanks Pai)
[ ] gluon/contrib/htmlmin.py for html minimization (thanks kerncece)
[ ] web2py_component has timeout parameter, thanks Alan
[ ] 100's of small bug fixes and small improvements

